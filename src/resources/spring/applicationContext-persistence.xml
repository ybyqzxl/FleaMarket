<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
	</bean>
	<bean id="dataSource" destroy-method="close"
		class="com.alibaba.druid.pool.DruidDataSource" init-method="init">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property value="stat" name="filters"></property>
		<property name="maxActive" value="100"></property>
		<property name="initialSize" value="60"></property>
		<property name="maxWait" value="60000"></property>
		<property name="minIdle" value="10"></property>
		<property value="60000" name="timeBetweenEvictionRunsMillis"></property>
		<property value="300000" name="minEvictableIdleTimeMillis"></property>
		<!-- <property value="SELECT 'x'" name="validationQuery"></property> -->
		<property value="false" name="testWhileIdle"></property>
		<property value="false" name="testOnBorrow"></property>
		<property value="false" name="testOnReturn"></property>
		<property value="true" name="poolPreparedStatements"></property>
		<property value="20" name="maxPoolPreparedStatementPerConnectionSize"></property>
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>*</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.showsql}</prop>
				<prop key="hibernate.format_sql">${hibernate.formatsql}</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl}</prop>
			</props>
		</property>
	</bean>
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<aop:config>
		<aop:pointcut id="targetMethod"
			expression="execution(public * org.iti.framework.service.*.*(..))" />
		<!--TODO -->
		<!-- 配置参与事务的类 -->
		<!-- <aop:pointcut id="targetMethod" expression="" /> -->
		<aop:advisor pointcut-ref="targetMethod" advice-ref="txAdvice" />
	</aop:config>
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
</beans>